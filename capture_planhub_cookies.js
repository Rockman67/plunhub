// tools/capture_planhub_cookies.js
require('dotenv').config();
const fs        = require('fs');
const path      = require('path');
const puppeteer = require('puppeteer');

/* ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ helpers ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ */
function ts() {
  return `[${new Date().toLocaleTimeString('ru-RU', { hour12:false })}]`;
}
function log(...args) {
  console.log(ts(), ...args);
}
/* ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ */

const COOKIE_PATH = path.resolve(__dirname, '../planhub_cookies.json');
const LIST_URL    = 'https://subcontractor.planhub.com/leads/list?type=planhub';

/* ‚îÄ‚îÄ –∂–¥—ë–º —Ä–µ–∞–ª—å–Ω–æ–µ –Ω–∞–∂–∞—Ç–∏–µ –∫–ª–∞–≤–∏—à–∏ ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ */
function waitForRealKey(msg) {
  return new Promise(resolve => {
    const stdin = process.stdin;
    stdin.setRawMode(true);
    stdin.resume();
    stdin.setEncoding('utf8');

    let first = true;
    log(msg);

    stdin.on('data', ch => {
      log(`stdin <${JSON.stringify(ch)}> charCode=${ch.charCodeAt(0)}`);
      if (first && (ch === '\r' || ch === '\n')) {
        log('üí°  –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º —Å—Ç–∞—Ä—Ç–æ–≤—ã–π CR/LF –æ—Ç –∫–æ–º–∞–Ω–¥—ã –∑–∞–ø—É—Å–∫–∞');
        first = false;
        return;
      }
      stdin.setRawMode(false);
      stdin.removeAllListeners('data');
      resolve();
    });
  });
}
/* ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ */

(async () => {
  log('‚è≥  –ó–∞–ø—É—Å–∫–∞–µ–º Chrome...');
  const browser = await puppeteer.launch({
    headless: false,
    defaultViewport: null,
    args: ['--start-maximized']
  });

  const [page] = await browser.pages();
  await page.setBypassCSP(true);

  log('‚û°  –û—Ç–∫—Ä—ã–ª—Å—è Chrome ‚Äì –≤–æ–π–¥–∏—Ç–µ –≤ PlanHub –≤—Ä—É—á–Ω—É—é.');
  log('   –ü–æ—Å–ª–µ –ª–æ–≥–∏–Ω–∞ –∏ –ø–æ—è–≤–ª–µ–Ω–∏—è —Å–ø–∏—Å–∫–∞ –ø—Ä–æ–µ–∫—Ç–æ–≤ –≤–µ—Ä–Ω–∏—Ç–µ—Å—å –≤ —Ç–µ—Ä–º–∏–Ω–∞–ª –∏ –Ω–∞–∂–º–∏—Ç–µ –õ–Æ–ë–£–Æ –∫–ª–∞–≤–∏—à—É.');

  log('üåê  –ü–µ—Ä–µ—Ö–æ–¥–∏–º –Ω–∞ LIST_URL...');
  await page.goto(LIST_URL, { waitUntil: 'domcontentloaded' }).catch(err => log('‚ùó page.goto error:', err.message));
  log('üìç  –°–µ–π—á–∞—Å page.url() =', page.url());

  // –∫–∞–∂–¥—ã–µ 2 —Å –ø–æ–∫–∞–∑—ã–≤–∞–µ–º, –Ω–∞ –∫–∞–∫–æ–º –º—ã URL (—á—Ç–æ–±—ã –≤–∏–¥–µ—Ç—å —Ä–µ–¥–∏—Ä–µ–∫—Ç—ã)
  const urlTicker = setInterval(() => log('üîÑ  –¢–µ–∫—É—â–∏–π URL:', page.url()), 2_000);

  await waitForRealKey('üëâ  –ù–∞–∂–º–∏—Ç–µ –ª—é–±—É—é –∫–ª–∞–≤–∏—à—É, –∫–æ–≥–¥–∞ —É–≤–∏–¥–∏—Ç–µ —Ç–∞–±–ª–∏—Ü—É –ø—Ä–æ–µ–∫—Ç–æ–≤‚Ä¶');

  clearInterval(urlTicker);
  log('‚å®Ô∏è  –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞–∂–∞–ª –∫–ª–∞–≤–∏—à—É, —Å–æ–±–∏—Ä–∞–µ–º cookies‚Ä¶');

  const cookies = await page.cookies();
  log('üç™  –ü–æ–ª—É—á–µ–Ω–æ cookies:', cookies.length);

  if (!cookies.length) {
    log('‚úó Cookies –ø–æ–ª—É—á–∏—Ç—å –Ω–µ —É–¥–∞–ª–æ—Å—å.');
  } else {
    fs.writeFileSync(COOKIE_PATH, JSON.stringify(cookies, null, 2));
    log(`‚úì Cookies —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –≤ ${COOKIE_PATH}`);
  }

  await browser.close();
  log('üõë  –ë—Ä–∞—É–∑–µ—Ä –∑–∞–∫—Ä—ã—Ç, —Å–∫—Ä–∏–ø—Ç –∑–∞–≤–µ—Ä—à—ë–Ω.');
  process.exit(0);
})();
